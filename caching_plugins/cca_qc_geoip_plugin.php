<?php
if(!defined('WPINC')) exit('Do NOT access this file directly: '.basename(__FILE__)); // MUST have WordPress.

function cca_qc_plugin() {
  if ( !  empty($GLOBALS['comet_cache_advanced_cache']) ):
      $ac = $GLOBALS['comet_cache_advanced_cache'];
      $ac->addFilter('comet_cache_version_salt', 'cca_qc_salt_shaker');
  elseif ( !  empty($GLOBALS['zencache_advanced_cache']) ):
      $ac = $GLOBALS['zencache_advanced_cache'];
      $ac->addFilter('zencache_version_salt', 'cca_qc_salt_shaker');
  else:  # note double underscore in Global
      $ac =  $GLOBALS['zencache__advanced_cache'];   
      $ac->add_filter(get_class($ac). '__version_salt', 'cca_qc_salt_shaker');
  endif;
}

cca_qc_plugin(); // Run this plugin.


function cca_qc_salt_shaker($version_salt) // Salt shaker.
{	
		  $just_these = array();  // the list of country codes to be separately cached, this string is replaced/generated by the plugin 
			$my_ccgroup = array();  // the list of country codes to cached as a group
			$cca_maxmindDataDirectory = "ccaMaxDataDirReplace"; // location of Maxmind data, this string is replaced/generated by the plugin 
			$cczc_maxmindDirectory = "cczcMaxDirReplace"; // location of Maxmind script, this string is replaced/generated by the plugin 

// return info requested by Country Caching plugin
			if ($version_salt == 'cca_options') return implode("," , $just_these);
			if ($version_salt == 'cca_group') return implode("," , $my_ccgroup);
			if ($version_salt == 'cca_version') return '0.1.0';
			if ($version_salt == 'cca_data') return $cca_maxmindDataDirectory;

// return original or modified key to Zen/QC
			$ISOcode = '';
			
      if ( ! empty($_SERVER["HTTP_CF_IPCOUNTRY"])) $ISOcode = $_SERVER["HTTP_CF_IPCOUNTRY"];  //Cloudflare GEOIP is enabled
      if ($ISOcode != 'XX' && ctype_alpha($ISOcode) && strlen($ISOcode) == 2 ) :  #Cloudflare is identifying country
			  /*  if both "just_these" and "my_ccgroup" are empty we want to separately cache every country, otherwise */
        if ( (empty($just_these) && empty($my_ccgroup) ) || in_array($ISOcode,$just_these) ) :  
        					return $version_salt . $ISOcode;
        endif;
        // we only want to separately cache some counties
				if ( ! empty($my_ccgroup) && in_array($ISOcode,$my_ccgroup) ) :  # any entry in "just_these" takes priority over "my_ccgroup" entries
        					return $version_salt . 'mygroup';
        endif;
        if ( empty($just_these)):  # this visitor country is not in the ccgroup entry so separately cache
          return $version_salt . $ISOcode;
        endif;
				return $version_salt;  # visitor country and is not one of "just these" or group so use default cache
			endif;  // otherwise IP location not recognised - try Maxmind below

      $visitorIP = $_SERVER['REMOTE_ADDR'];
      if( filter_var($visitorIP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4) ) {  //then server is IPV4
        $geoIPdb = 'GeoIP.dat';
      } elseif ( filter_var($visitorIP, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) ) {$geoIPdb = 'GeoIPv6.dat';}
    	else return $version_salt;  // No GeoIP system


			if ( ! file_exists($cczc_maxmindDirectory . 'cczc_geoip.inc') || ! file_exists($cca_maxmindDataDirectory . $geoIPdb) ) :
			    return $version_salt;
			endif;
			
			include_once($cczc_maxmindDirectory . 'cczc_geoip.inc');
  		$gi = \cczc_max\geoip_open($cca_maxmindDataDirectory . $geoIPdb, GEOIP_STANDARD);  
      if($geoIPdb == 'GeoIP.dat') :
			  $ISOcode = \cczc_max\geoip_country_code_by_addr($gi, $visitorIP);
      else:
			  $ISOcode = \cczc_max\geoip_country_code_by_addr_v6($gi, $visitorIP);
			endif;
      \cczc_max\geoip_close($gi);

      if (ctype_alpha($ISOcode)) :
        if ( (empty($just_these) && empty($my_ccgroup) ) || in_array($ISOcode,$just_these) ) :  // if we only want to separately cache some counties
        					return $version_salt . $ISOcode;
        endif;
        if ( ! empty($my_ccgroup) && in_array($ISOcode,$my_ccgroup) ) :  // if we only want to separately cache some counties
        					return $version_salt . 'mygroup';
        endif;
        if ( empty($just_these)):
          return $version_salt . $ISOcode;
        endif;
        return $version_salt;
			endif;
			return $version_salt;
}
